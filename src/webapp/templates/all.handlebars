(function () {
// Source: /home/nickwilson/prog/current1/oxford-sakai.git/feedback/src/webapp/WEB-INF/templates/content.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n                        <option value=\"";
  if (helper = helpers.id) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.id); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.displayName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.displayName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n                    ";
  return buffer;
  }

  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_instruction", options) : helperMissing.call(depth0, "translate", "content_instruction", options)))
    + "</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/reportcontent\" method=\"POST\">\n    <div id=\"feedback-mandatory-instruction\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <table id=\"feedback-field-table\" cols=\"2\">\n        <tr>\n            <td id=\"feedback-siteupdater-instruction\"><label for=\"feedback-siteupdaters\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "siteupdater_instruction", options) : helperMissing.call(depth0, "translate", "siteupdater_instruction", options)))
    + "</label></td>\n            <td>\n                <select id=\"feedback-siteupdaters\" name=\"alternativerecipient\">\n                    ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.siteUpdaters), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n                </select>\n            </td>\n        </tr>\n        <tr>\n            <td id=\"feedback-title-label\"><label for=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</label></td>\n            <td id=\"feedback-title-field\"><input id=\"feedback-title\" type=\"text\" name=\"title\" maxlength=\"40\" size=\"40\"/></td>\n        </tr>\n        <tr>\n            <td id=\"feedback-description-label\"><label for=\"feedback-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</label></td>\n            <td id=\"feedback-description-field\"><textarea id=\"feedback-description\" name=\"description\" cols=\"80\" rows=\"5\"></textarea></td>\n        </tr>\n    </table>\n    <div id=\"feedback-attachments-label\">\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</span>\n        <span id=\"feedback-max-attachments-label\">\n            <span id=\"feedback-max-attachments-mb\"></span>\n            <span id=\"feedback-attachments-max-suffix\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_max_suffix", options) : helperMissing.call(depth0, "translate", "attachments_max_suffix", options)))
    + "</span>\n        </span>\n    </div>\n    <input id=\"feedback-attachment\" name=\"attachment\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <input id=\"feedback-submit-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n    <input id=\"feedback-cancel-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "cancel_label", options) : helperMissing.call(depth0, "translate", "cancel_label", options)))
    + "\" />\n</form>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['content'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['content'] = template;


// Source: /home/nickwilson/prog/current1/oxford-sakai.git/feedback/src/webapp/WEB-INF/templates/home.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "overview", options) : helperMissing.call(depth0, "translate", "overview", options)))
    + "\n</div>\n<div id=\"feedback-help-wrapper\" class=\"instruction\">\n    <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_1", options) : helperMissing.call(depth0, "translate", "help_1", options)))
    + "</span>\n    <a href=\"";
  if (helper = helpers.helpPagesUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpPagesUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_tooltip", options) : helperMissing.call(depth0, "translate", "help_tooltip", options)))
    + "\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_2", options) : helperMissing.call(depth0, "translate", "help_2", options)))
    + "</a>\n    <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_3", options) : helperMissing.call(depth0, "translate", "help_3", options)))
    + "</span>\n</div>\n<div id=\"feedback-technical-setup-instruction\" class=\"information\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_setup_instruction", options) : helperMissing.call(depth0, "translate", "technical_setup_instruction", options)))
    + "\n</div>\n<div id=\"feedback-links\">\n    <div class=\"feedback-box\" id=\"feedback-content-problem\">\n        <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_title", options) : helperMissing.call(depth0, "translate", "content_title", options)))
    + "</h3>\n        <ul>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_explanation", options) : helperMissing.call(depth0, "translate", "content_explanation", options)))
    + "</ul>\n        <p><a id=\"feedback-report-content-link\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_link", options) : helperMissing.call(depth0, "translate", "content_link", options)))
    + "</a></p>\n        <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"feedback-box\" id=\"feedback-ask-help\">\n        <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_title", options) : helperMissing.call(depth0, "translate", "ask_title", options)))
    + "</h3>\n        <ul>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_explanation", options) : helperMissing.call(depth0, "translate", "ask_explanation", options)))
    + "</ul>\n        <p><a id=\"feedback-report-helpdesk-link\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "ask_link", options) : helperMissing.call(depth0, "translate", "ask_link", options)))
    + "</a></p>\n        <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"feedback-box\" id=\"feedback-tech-problem\">\n        <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_title", options) : helperMissing.call(depth0, "translate", "technical_title", options)))
    + "</h3>\n        <ul>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_explanation", options) : helperMissing.call(depth0, "translate", "technical_explanation", options)))
    + "</ul>\n        <p><a id=\"feedback-report-technical-link\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_link", options) : helperMissing.call(depth0, "translate", "technical_link", options)))
    + "</a></p>\n        <div class=\"clear\"></div>\n    </div>\n\n    <div class=\"feedback-box\" id=\"feedback-improvement\">\n        <h3>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_title", options) : helperMissing.call(depth0, "translate", "suggest_title", options)))
    + "</h3>\n        <ul>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_explanation", options) : helperMissing.call(depth0, "translate", "suggest_explanation", options)))
    + "</ul>\n        <p><a id=\"feedback-suggest-feature-link\" href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_link", options) : helperMissing.call(depth0, "translate", "suggest_link", options)))
    + "</a></p>\n        <div class=\"clear\"></div>\n    </div>\n\n    <div id=\"feedback-supplementary-info\">";
  if (helper = helpers.supplementaryInfo) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.supplementaryInfo); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n    <div class=\"clear\"></div>\n</div>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['home'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['home'] = template;


// Source: /home/nickwilson/prog/current1/oxford-sakai.git/feedback/src/webapp/WEB-INF/templates/technical.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_instruction", options) : helperMissing.call(depth0, "translate", "technical_instruction", options)))
    + "</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/reporttechnical\" method=\"POST\">\n    <div id=\"feedback-mandatory-instruction\" class=\"instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <table id=\"feedback-field-table\" cols=\"2\">\n        <tr>\n            <td id=\"feedback-title-label\"><label for=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</label></td>\n            <td id=\"feedback-title-field\"><input id=\"feedback-title\" type=\"text\" name=\"title\" maxlength=\"40\" size=\"40\"/></td>\n        </tr>\n        <tr>\n            <td id=\"feedback-description-label\"><label for=\"feedback-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</label></td>\n            <td id=\"feedback-description-field\"><textarea id=\"feedback-description\" name=\"description\" cols=\"80\" rows=\"5\"></textarea></td>\n        </tr>\n        <tr id=\"feedback-sender-address\"><td>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "sender_address_label", options) : helperMissing.call(depth0, "translate", "sender_address_label", options)))
    + "</td><td><input type=\"text\" name=\"senderaddress\" /></td</tr>\n    </table>\n    <div id=\"feedback-recaptcha-wrapper\">\n        <div>Enter the text that you see in the box below:</div>\n        <div id=\"feedback-recaptcha-block\"></div>\n    </div>\n    <div id=\"feedback-attachments-label\">\n        <span>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</span>\n        <span id=\"feedback-max-attachments-label\">\n            <span id=\"feedback-max-attachments-mb\"></span>\n            <span id=\"feedback-attachments-max-suffix\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_max_suffix", options) : helperMissing.call(depth0, "translate", "attachments_max_suffix", options)))
    + "</span>\n        </span>\n    </div>\n    <input id=\"feedback-attachment\" name=\"attachment\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <input id=\"feedback-submit-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n    <input id=\"feedback-cancel-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "cancel_label", options) : helperMissing.call(depth0, "translate", "cancel_label", options)))
    + "\" />\n</form>\n";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['technical'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['technical'] = template;


// Source: /home/nickwilson/prog/current1/oxford-sakai.git/feedback/src/webapp/WEB-INF/templates/toolbar.handlebars

  var template = Handlebars.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<li id=\"feedback-suggest-feature-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_tooltip", options) : helperMissing.call(depth0, "translate", "suggest_feature_tooltip", options)))
    + "\" href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_label", options) : helperMissing.call(depth0, "translate", "suggest_feature_label", options)))
    + "</a></span></li>";
  return buffer;
  });
  var templates = Handlebars.templates = Handlebars.templates || {};
  templates['toolbar'] = template;
  var partials = Handlebars.partials = Handlebars.partials || {};
  partials['toolbar'] = template;



})();