(function() {
  var template = Handlebars.template, templates = Handlebars.templates = Handlebars.templates || {};
templates['content'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, helper;
  buffer += "\n            <option value=\"";
  if (helper = helpers.email) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.email); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (helper = helpers.displayName) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.displayName); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "</option>\n            ";
  return buffer;
  }

  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_instruction", options) : helperMissing.call(depth0, "translate", "content_instruction", options)))
    + "\n</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/reportcontent\" method=\"POST\">\n    <input type=\"hidden\" name=\"contactemail\" value=\"";
  if (helper = helpers.contactEmail) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.contactEmail); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" />\n    <div id=\"feedback-siteupdaters-wrapper\">\n        <div id=\"feedback-siteupdater-instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "siteupdater_instruction", options) : helperMissing.call(depth0, "translate", "siteupdater_instruction", options)))
    + "</div>\n        <select id=\"feedback-siteupdaters\" name=\"alternativerecipient\">\n            ";
  stack1 = helpers.each.call(depth0, (depth0 && depth0.siteUpdaters), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n        </select>\n    </div>\n    <div id=\"feedback-mandatory-instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <table id=\"feedback-field-table\" cols=\"2\">\n        <tr><td id=\"feedback-title-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</td><td id=\"feedback-title-field\"><input type=\"text\" name=\"title\" /></td></tr>\n        <tr><td id=\"feedback-description-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</td><td id=\"feedback-description-field\"><textarea name=\"description\"></textarea></td></tr>\n    </table>\n    <div id=\"feedback-attachments-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</div>\n    <input id=\"feedback-attachment\" name=\"attachment\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <br />\n    <input id=\"feedback-submit-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n</form>\n";
  return buffer;
  });
templates['home'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "\n    <div class=\"feedback-link\">\n        <a id=\"feedback-report-content-link\" href=\"javascript:;\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report_content_tooltip", options) : helperMissing.call(depth0, "translate", "report_content_tooltip", options)))
    + "\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report", options) : helperMissing.call(depth0, "translate", "report", options)))
    + "</a>\n        <span class=\"feedback-short-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "short_content_description", options) : helperMissing.call(depth0, "translate", "short_content_description", options)))
    + "</span>\n    </div>\n    ";
  return buffer;
  }

  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "overview", options) : helperMissing.call(depth0, "translate", "overview", options)))
    + "\n</div>\n<div id=\"feedback-help-wrapper\">\n    <span id=\"feedback-help-1\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_1", options) : helperMissing.call(depth0, "translate", "help_1", options)))
    + "</span>\n    <a href=\"";
  if (helper = helpers.helpPagesUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpPagesUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_tooltip", options) : helperMissing.call(depth0, "translate", "help_tooltip", options)))
    + "\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_2", options) : helperMissing.call(depth0, "translate", "help_2", options)))
    + "</a>\n    <span id=\"feedback-help-3\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_3", options) : helperMissing.call(depth0, "translate", "help_3", options)))
    + "</span>\n</div>\n<div id=\"feedback-links\">\n    ";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.loggedIn), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n    <div class=\"feedback-link\">\n        <a id=\"feedback-report-technical-link\" href=\"javascript:;\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report_technical_tooltip", options) : helperMissing.call(depth0, "translate", "report_technical_tooltip", options)))
    + "\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report", options) : helperMissing.call(depth0, "translate", "report", options)))
    + "</a>\n        <span class=\"feedback-short-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "short_technical_description", options) : helperMissing.call(depth0, "translate", "short_technical_description", options)))
    + "</span>\n    </div>\n    <div class=\"feedback-link\">\n        <a id=\"feedback-suggest-feature-link\" href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\" title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_tooltip", options) : helperMissing.call(depth0, "translate", "suggest_feature_tooltip", options)))
    + "\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest", options) : helperMissing.call(depth0, "translate", "suggest", options)))
    + "</a>\n        <span class=\"feedback-short-description\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "feature_description", options) : helperMissing.call(depth0, "translate", "feature_description", options)))
    + "</span>\n    </div>\n    <div id=\"feedback-supplementary-info\">";
  if (helper = helpers.supplementaryInfo) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.supplementaryInfo); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div>\n</div>\n";
  return buffer;
  });
templates['technical'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<h2 id=\"feedback-title\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title", options) : helperMissing.call(depth0, "translate", "title", options)))
    + "</h2>\n<div id=\"feedback-overview\">\n    "
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_instruction", options) : helperMissing.call(depth0, "translate", "technical_instruction", options)))
    + "\n</div>\n<form id=\"feedback-form\" action=\"/direct/feedback/";
  if (helper = helpers.siteId) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.siteId); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "/reporttechnical\" method=\"POST\">\n    <div id=\"feedback-mandatory-instruction\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "mandatory_instruction", options) : helperMissing.call(depth0, "translate", "mandatory_instruction", options)))
    + "</div>\n    <table id=\"feedback-field-table\" cols=\"2\">\n        <tr><td id=\"feedback-title-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "title_label", options) : helperMissing.call(depth0, "translate", "title_label", options)))
    + "</td><td id=\"feedback-title-field\"><input type=\"text\" name=\"title\" /></td></tr>\n        <tr><td id=\"feedback-description-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "description_label", options) : helperMissing.call(depth0, "translate", "description_label", options)))
    + "</td><td id=\"feedback-description-field\"><textarea name=\"description\"></textarea></td></tr>\n        <tr id=\"feedback-sender-address\"><td>"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "sender_address_label", options) : helperMissing.call(depth0, "translate", "sender_address_label", options)))
    + "</td><td><input type=\"text\" name=\"senderaddress\" /></td</tr>\n    </table>\n    <div id=\"feedback-attachments-label\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "attachments_label", options) : helperMissing.call(depth0, "translate", "attachments_label", options)))
    + "</div>\n    <input id=\"feedback-attachment\" name=\"attachment\" type=\"file\" class=\"multi\"/><br clear=\"all\"/>\n    <br />\n    <input id=\"feedback-submit-button\" type=\"submit\" value=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "submit_label", options) : helperMissing.call(depth0, "translate", "submit_label", options)))
    + "\" />\n</form>\n";
  return buffer;
  });
templates['toolbar'] = template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helper, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  var buffer = "", helper, options;
  buffer += "<li id=\"feedback-content-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report_content_tooltip", options) : helperMissing.call(depth0, "translate", "report_content_tooltip", options)))
    + "\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "content_label", options) : helperMissing.call(depth0, "translate", "content_label", options)))
    + "</a></span></li>";
  return buffer;
  }

  buffer += "<li id=\"feedback-home-item\" class=\"firstToolBarItem\" role=\"menuitem\"><span class=\"current\"><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report_content_tooltip", options) : helperMissing.call(depth0, "translate", "report_content_tooltip", options)))
    + "\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "home_label", options) : helperMissing.call(depth0, "translate", "home_label", options)))
    + "</a></span></li>\n";
  stack1 = helpers['if'].call(depth0, (depth0 && depth0.loggedIn), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\n<li id=\"feedback-technical-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "report_technical_tooltip", options) : helperMissing.call(depth0, "translate", "report_technical_tooltip", options)))
    + "\" href=\"javascript:;\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "technical_label", options) : helperMissing.call(depth0, "translate", "technical_label", options)))
    + "</a></span></li>\n<li id=\"feedback-suggest-feature-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_tooltip", options) : helperMissing.call(depth0, "translate", "suggest_feature_tooltip", options)))
    + "\" href=\"";
  if (helper = helpers.featureSuggestionUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.featureSuggestionUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "suggest_feature_label", options) : helperMissing.call(depth0, "translate", "suggest_feature_label", options)))
    + "</a></span></li>\n<li id=\"feedback-help-item\" role=\"menuitem\"><span><a title=\""
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_tooltip", options) : helperMissing.call(depth0, "translate", "help_tooltip", options)))
    + "\" href=\"";
  if (helper = helpers.helpPagesUrl) { stack1 = helper.call(depth0, {hash:{},data:data}); }
  else { helper = (depth0 && depth0.helpPagesUrl); stack1 = typeof helper === functionType ? helper.call(depth0, {hash:{},data:data}) : helper; }
  buffer += escapeExpression(stack1)
    + "\" target=\"_blank\">"
    + escapeExpression((helper = helpers.translate || (depth0 && depth0.translate),options={hash:{},data:data},helper ? helper.call(depth0, "help_label", options) : helperMissing.call(depth0, "translate", "help_label", options)))
    + "</a></span></li>\n";
  return buffer;
  });
})();
